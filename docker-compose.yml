version: '3.8'

services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data

  celery:
    build: ./backend
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - ./backend:/app
      - user_files:/app/files
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OTRANSLATOR_API_KEY=${OTRANSLATOR_API_KEY}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - user_files:/app/files
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OTRANSLATOR_API_KEY=${OTRANSLATOR_API_KEY}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_APP=app.py
      - FLASK_ENV=production

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_files:/static
      - ./ssl:/ssl
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:
  user_files:
  static_files: