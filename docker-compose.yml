services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OTRANSLATOR_API_KEY=${OTRANSLATOR_API_KEY}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - PAYPAL_MODE=${PAYPAL_MODE}
    volumes:
      - ./files:/app/files
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    command: celery -A tasks worker --loglevel=info
    restart: always
    depends_on:
      - backend
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - OTRANSLATOR_API_KEY=${OTRANSLATOR_API_KEY}
    volumes:
      - ./files:/app/files
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    restart: always
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  